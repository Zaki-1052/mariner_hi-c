=========================================
Mariner Multi-Resolution Pipeline
=========================================
Job ID: 43537779
Node: exp-9-43
CPUs: 8
Memory: 64GB
Start time: Mon Oct 20 10:43:43 PDT 2025
=========================================

Environment check:
/home/zalibhai/.conda/envs/mariner_env/bin/R
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"


=========================================
PROCESSING RESOLUTION: 5000 bp (5 kb)
=========================================
Start time: Mon Oct 20 10:43:45 PDT 2025

=========================================
STEP 1: Preparing loops (6 replicates)
=========================================
Script: scripts/prep_loops.R
Resolution: 5000 bp

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, aperm, append, as.data.frame, basename, cbind,
    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,
    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,
    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,
    Position, rank, rbind, Reduce, rownames, sapply, saveRDS, setdiff,
    table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:utils’:

    findMatches

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb
Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

Warning message:
package ‘matrixStats’ was built under R version 4.4.3 

========================================
RESOLUTION: 5000 bp (5 kb)
========================================


=== Reading BEDPE files for all replicates ===
Reading ctrl_M1... 9433 loops (5kb, observed>0)
Reading ctrl_M2... 8530 loops (5kb, observed>0)
Reading ctrl_M3... 11040 loops (5kb, observed>0)
Reading mut_M1... 8741 loops (5kb, observed>0)
Reading mut_M2... 9814 loops (5kb, observed>0)
Reading mut_M3... 9563 loops (5kb, observed>0)

Per-replicate loop counts:
  ctrl_M1: 9433 loops
  ctrl_M2: 8530 loops
  ctrl_M3: 11040 loops
  mut_M1: 8741 loops
  mut_M2: 9814 loops
  mut_M3: 9563 loops

Total loops across all replicates: 57121

=== Converting to GInteractions ===
Converting ctrl_M1... 9433 interactions
Converting ctrl_M2... 8530 interactions
Converting ctrl_M3... 11040 interactions
Converting mut_M1... 8741 interactions
Converting mut_M2... 9814 interactions
Converting mut_M3... 9563 interactions
Created output directory: outputs/res_5kb
✓ Saved to: outputs/res_5kb/01_ginteractions.rds

=== Merging loops across all replicates ===
Strategy: Union (include loops from ANY replicate)
Radius: 10 kb
Selection: Maximum observed count

✓ Merged 17983 consensus loops from 57121 input loops
  Reduction: 68.5%

Cluster size distribution:
  1 replicate: 6254 loops (34.8%)
  2 replicates: 2470 loops (13.7%)
  3 replicates: 1748 loops (9.7%)
  4 replicates: 1431 loops (8.0%)
  5 replicates: 1528 loops (8.5%)
  6 replicates: 4545 loops (25.3%)
  7 replicates: 7 loops (0.0%)

Per-replicate contribution to consensus:
  ctrl_M1: 0/17983 loops (0.0%)
  ctrl_M2: 0/17983 loops (0.0%)
  ctrl_M3: 0/17983 loops (0.0%)
  mut_M1: 0/17983 loops (0.0%)
  mut_M2: 0/17983 loops (0.0%)
  mut_M3: 0/17983 loops (0.0%)

✓ Saved to: outputs/res_5kb/02_merged.rds

=== Binning to 5kb grid ===
✓ Binned 17983 loops to 5kb resolution
✓ Saved to: outputs/res_5kb/03_binned.rds

=== Creating buffered regions ===
Buffer: ±2 bins (±10kb) around center
Purpose: Handle positional shifts between replicates

✓ Created 17983 buffered regions
  Region size: 5 × 5 pixels (25kb × 25kb)
✓ Saved to: outputs/res_5kb/04_buffered.rds

=================================
LOOP PREPARATION COMPLETE
=================================
Resolution: 5000 bp (5 kb)
Input: 57121 loops across 6 replicates
Output: 17983 consensus loop positions
Ready for extraction: 17983 loops × 6 replicates × 25 pixels
                    = 2697450 total extractions

Output directory: outputs/res_5kb
Next step: Rscript scripts/extract_counts.R 5000

✅ Loop preparation completed for 5kb

=========================================
STEP 2: Extracting Hi-C counts (6 files)
=========================================
Script: scripts/extract_counts.R
Resolution: 5000 bp


========================================
Step 5: Hi-C Contact Extraction
RESOLUTION: 5000 bp (5 kb)
========================================

Warning messages:
1: package ‘matrixStats’ was built under R version 4.4.3 
2: package ‘Matrix’ was built under R version 4.4.3 
3: package ‘S4Arrays’ was built under R version 4.4.3 
4: package ‘abind’ was built under R version 4.4.3 
Loading buffered loops from outputs/res_5kb...
  Loaded 17983 loops with 5x5 pixel regions

Verifying .hic files...
  ctrl_M1: 2.4 GB - OK
  ctrl_M2: 3.3 GB - OK
  ctrl_M3: 3.1 GB - OK
  mut_M1: 2.8 GB - OK
  mut_M2: 2.9 GB - OK
  mut_M3: 2.6 GB - OK

Checking .hic file properties...

ctrl_M1 file:
  Resolutions (bp): 2500000, 1e+06, 5e+05, 250000, 1e+05 ...
  Normalizations: INTER_SCALE, VC_SQRT, NONE, GW_SCALE, VC, SCALE 

ctrl_M2 file:
  Resolutions (bp): 2500000, 1e+06, 5e+05, 250000, 1e+05 ...
  Normalizations: INTER_SCALE, VC_SQRT, NONE, GW_SCALE, VC, SCALE 

ctrl_M3 file:
  Resolutions (bp): 2500000, 1e+06, 5e+05, 250000, 1e+05 ...
  Normalizations: INTER_SCALE, VC_SQRT, NONE, GW_SCALE, VC, SCALE 

mut_M1 file:
  Resolutions (bp): 2500000, 1e+06, 5e+05, 250000, 1e+05 ...
  Normalizations: INTER_SCALE, VC_SQRT, NONE, GW_SCALE, VC, SCALE 

mut_M2 file:
  Resolutions (bp): 2500000, 1e+06, 5e+05, 250000, 1e+05 ...
  Normalizations: INTER_SCALE, VC_SQRT, NONE, GW_SCALE, VC, SCALE 

mut_M3 file:
  Resolutions (bp): 2500000, 1e+06, 5e+05, 250000, 1e+05 ...
  Normalizations: INTER_SCALE, VC_SQRT, NONE, GW_SCALE, VC, SCALE 

Using normalization: VC

Validating loop positions...
  Chromosomes in loops: 21
  Example chromosomes: chr1, chr2, chr3, chr4, chr5
  Maximum anchor width: 25001 bp
  Minimum required blockSize: 50002 bp

=== Starting extraction ===
Processing 17983 loops × 6 replicates × 25 pixels
  = 2697450 total extractions


✓ Extraction completed in 2535.4 seconds

=== Validation of Extracted Data ===
Dimensions: 5 x 5 x 17983 x 6
  = 5x5 pixels x 17983 loops x 6 files

NA values: 0 (0.00%)

Value distribution (excluding NAs):
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
   0.000    3.481    6.149    7.556   10.004 5197.531 

Sparsity: 2.0% zeros

Per-sample statistics:
  ctrl_M1: median=5.13, mean=6.37, max=272, total=2864059
  ctrl_M2: median=7.06, mean=8.50, max=760, total=3820723
  ctrl_M3: median=6.80, mean=8.28, max=380, total=3720899
  mut_M1: median=6.34, mean=7.80, max=1936, total=3508585
  mut_M2: median=6.25, mean=7.65, max=5198, total=3439868
  mut_M3: median=5.52, mean=6.74, max=325, total=3029051

Library size ratios:
  Median ctrl: 3720899
  Median mut: 3439868
  Ratio (ctrl/mut): 1.082

=== Correlation Analysis ===

Full correlation matrix:
        ctrl_M1 ctrl_M2 ctrl_M3 mut_M1 mut_M2 mut_M3
ctrl_M1   1.000   0.780   0.806  0.662  0.480  0.770
ctrl_M2   0.780   1.000   0.810  0.662  0.483  0.791
ctrl_M3   0.806   0.810   1.000  0.686  0.506  0.800
mut_M1    0.662   0.662   0.686  1.000  0.417  0.676
mut_M2    0.480   0.483   0.506  0.417  1.000  0.487
mut_M3    0.770   0.791   0.800  0.676  0.487  1.000

Within-condition correlations:
  Control replicates:
    ctrl_M1 vs ctrl_M2: 0.780
    ctrl_M1 vs ctrl_M3: 0.806
    ctrl_M2 vs ctrl_M3: 0.810
  Mean within-ctrl correlation: 0.799

  Mutant replicates:
    mut_M1 vs mut_M2: 0.417
    mut_M1 vs mut_M3: 0.676
    mut_M2 vs mut_M3: 0.487
  Mean within-mut correlation: 0.527

Between-condition correlations:
  Mean ctrl vs mut correlation: 0.649
  Range: 0.480 - 0.800

Quality Assessment:
  ⚠ WARNING: Lower than expected within-condition correlation (<0.90)
    This may indicate technical issues or high biological variability
  ✓ Clear biological signal (within > between correlations)

=== Example Extracted Matrices ===
Showing first 3 loops for control sample:

Loop 1:
       8.27     5.86     7.46     4.57     6.55 
      10.03    10.70    10.81    12.21    10.56 
       9.81     8.44    17.79    12.06    11.80 
      12.23    10.05    16.69    13.92    11.23 
       8.60    12.03    10.60    11.54     7.24 
  Sum: 261, Max: 18, Non-zero: 25/25

Loop 2:
       4.53     4.32     8.29     5.28     1.63 
       3.49     4.57     7.24     8.84     3.35 
       2.33     3.81    15.97     6.21     6.70 
       4.85     5.29     8.28     7.76     4.65 
       1.65     5.40     7.38     4.40     0.53 
  Sum: 137, Max: 16, Non-zero: 25/25

Loop 3:
      11.53     8.02     6.93     9.69    11.44 
       3.80     5.73    11.42    10.73    10.08 
       9.79     7.67    12.93    11.04    12.17 
      14.09     9.51    11.17    11.13    12.98 
      14.38    22.75    20.78    16.47    10.76 
  Sum: 287, Max: 23, Non-zero: 25/25


=== Saving Extracted Data ===
Saving as HDF5 (required for out-of-memory objects)...
Start writing assay 1/3 to HDF5 file:
  outputs/res_5kb/05_extractedassays.h5
/ reading and realizing block 1/1 ... ok
\ Writing it ... OK
Finished writing assay 1/3 to HDF5 file:
  outputs/res_5kb/05_extractedassays.h5

Start writing assay 2/3 to HDF5 file:
  outputs/res_5kb/05_extractedassays.h5
/ reading and realizing block 1/1 ... ok
\ Writing it ... OK
Finished writing assay 2/3 to HDF5 file:
  outputs/res_5kb/05_extractedassays.h5

Start writing assay 3/3 to HDF5 file:
  outputs/res_5kb/05_extractedassays.h5
/ reading and realizing block 1/1 ... ok
\ Writing it ... OK
Finished writing assay 3/3 to HDF5 file:
  outputs/res_5kb/05_extractedassays.h5

Serialize InteractionArray object to RDS file:
  outputs/res_5kb/05_extractedse.rds
  Saved to: outputs/res_5kb/05_extracted/
  Metadata saved to: outputs/res_5kb/05_metadata.rds

=================================
EXTRACTION COMPLETE
=================================
Resolution: 5000 bp (5 kb)
Processed: 17983 loops × 6 replicates
Samples: ctrl_M1, ctrl_M2, ctrl_M3, mut_M1, mut_M2, mut_M3

Quality Metrics:
  Within-ctrl correlation: 0.799
  Within-mut correlation: 0.527
  Between-condition correlation: 0.649
  Normalization: VC
  Extraction time: 2535.4 seconds

Output: outputs/res_5kb/05_extracted/
Ready for QC and differential analysis
Next step: Rscript scripts/qc-val.R 5000

To load in next script:
  pixels <- loadHDF5SummarizedExperiment(dir='outputs/res_5kb', prefix='05_extracted')

✅ Count extraction completed for 5kb

=========================================
STEP 3: Aggregating 5x5 matrices
=========================================
Script: scripts/aggregate.R
Resolution: 5000 bp


========================================
Step 6: Matrix Aggregation
RESOLUTION: 5000 bp (5 kb)
========================================

Warning messages:
1: package ‘matrixStats’ was built under R version 4.4.3 
2: package ‘Matrix’ was built under R version 4.4.3 
3: package ‘S4Arrays’ was built under R version 4.4.3 
4: package ‘abind’ was built under R version 4.4.3 
Loading extracted Hi-C matrices...
  Loaded: 17983 loops x 6 samples
  Matrix dimensions per loop: 5x5 pixels
  Files: ctrl_M1, ctrl_M2, ctrl_M3, mut_M1, mut_M2, mut_M3

Array dimensions: 5 x 5 x 17983 x 6

=== Strategy 1: Simple Sum Aggregation ===
Rationale: Captures total Hi-C signal regardless of position within 5x5 window
Aggregating... 50 100 150 200 250 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 2450 2500 2550 2600 2650 2700 2750 2800 2850 2900 2950 3000 3050 3100 3150 3200 3250 3300 3350 3400 3450 3500 3550 3600 3650 3700 3750 3800 3850 3900 3950 4000 4050 4100 4150 4200 4250 4300 4350 4400 4450 4500 4550 4600 4650 4700 4750 4800 4850 4900 4950 5000 5050 5100 5150 5200 5250 5300 5350 5400 5450 5500 5550 5600 5650 5700 5750 5800 5850 5900 5950 6000 6050 6100 6150 6200 6250 6300 6350 6400 6450 6500 6550 6600 6650 6700 6750 6800 6850 6900 6950 7000 7050 7100 7150 7200 7250 7300 7350 7400 7450 7500 7550 7600 7650 7700 7750 7800 7850 7900 7950 8000 8050 8100 8150 8200 8250 8300 8350 8400 8450 8500 8550 8600 8650 8700 8750 8800 8850 8900 8950 9000 9050 9100 9150 9200 9250 9300 9350 9400 9450 9500 9550 9600 9650 9700 9750 9800 9850 9900 9950 10000 10050 10100 10150 10200 10250 10300 10350 10400 10450 10500 10550 10600 10650 10700 10750 10800 10850 10900 10950 11000 11050 11100 11150 11200 11250 11300 11350 11400 11450 11500 11550 11600 11650 11700 11750 11800 11850 11900 11950 12000 12050 12100 12150 12200 12250 12300 12350 12400 12450 12500 12550 12600 12650 12700 12750 12800 12850 12900 12950 13000 13050 13100 13150 13200 13250 13300 13350 13400 13450 13500 13550 13600 13650 13700 13750 13800 13850 13900 13950 14000 14050 14100 14150 14200 14250 14300 14350 14400 14450 14500 14550 14600 14650 14700 14750 14800 14850 14900 14950 15000 15050 15100 15150 15200 15250 15300 15350 15400 15450 15500 15550 15600 15650 15700 15750 15800 15850 15900 15950 16000 16050 16100 16150 16200 16250 16300 16350 16400 16450 16500 16550 16600 16650 16700 16750 16800 16850 16900 16950 17000 17050 17100 17150 17200 17250 17300 17350 17400 17450 17500 17550 17600 17650 17700 17750 17800 17850 17900 17950 Done
  Aggregated to: 17983 loops x 6 samples

Sum aggregation statistics:
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
   0.079  106.871  166.715  188.912  248.509 5777.309 

=== Strategy 2: Center-Weighted Aggregation ===
Rationale: Higher weight to center pixels, lower to edges
Weight matrix (normalized to sum=1):
  0.022 0.033 0.043 0.033 0.022
  0.033 0.043 0.054 0.043 0.033
  0.043 0.054 0.087 0.054 0.043
  0.033 0.043 0.054 0.043 0.033
  0.022 0.033 0.043 0.033 0.022

Applying weighted aggregation... 50 100 150 200 250 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 2450 2500 2550 2600 2650 2700 2750 2800 2850 2900 2950 3000 3050 3100 3150 3200 3250 3300 3350 3400 3450 3500 3550 3600 3650 3700 3750 3800 3850 3900 3950 4000 4050 4100 4150 4200 4250 4300 4350 4400 4450 4500 4550 4600 4650 4700 4750 4800 4850 4900 4950 5000 5050 5100 5150 5200 5250 5300 5350 5400 5450 5500 5550 5600 5650 5700 5750 5800 5850 5900 5950 6000 6050 6100 6150 6200 6250 6300 6350 6400 6450 6500 6550 6600 6650 6700 6750 6800 6850 6900 6950 7000 7050 7100 7150 7200 7250 7300 7350 7400 7450 7500 7550 7600 7650 7700 7750 7800 7850 7900 7950 8000 8050 8100 8150 8200 8250 8300 8350 8400 8450 8500 8550 8600 8650 8700 8750 8800 8850 8900 8950 9000 9050 9100 9150 9200 9250 9300 9350 9400 9450 9500 9550 9600 9650 9700 9750 9800 9850 9900 9950 10000 10050 10100 10150 10200 10250 10300 10350 10400 10450 10500 10550 10600 10650 10700 10750 10800 10850 10900 10950 11000 11050 11100 11150 11200 11250 11300 11350 11400 11450 11500 11550 11600 11650 11700 11750 11800 11850 11900 11950 12000 12050 12100 12150 12200 12250 12300 12350 12400 12450 12500 12550 12600 12650 12700 12750 12800 12850 12900 12950 13000 13050 13100 13150 13200 13250 13300 13350 13400 13450 13500 13550 13600 13650 13700 13750 13800 13850 13900 13950 14000 14050 14100 14150 14200 14250 14300 14350 14400 14450 14500 14550 14600 14650 14700 14750 14800 14850 14900 14950 15000 15050 15100 15150 15200 15250 15300 15350 15400 15450 15500 15550 15600 15650 15700 15750 15800 15850 15900 15950 16000 16050 16100 16150 16200 16250 16300 16350 16400 16450 16500 16550 16600 16650 16700 16750 16800 16850 16900 16950 17000 17050 17100 17150 17200 17250 17300 17350 17400 17450 17500 17550 17600 17650 17700 17750 17800 17850 17900 17950 Done

Weighted aggregation statistics:
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
  0.00378   4.62807   7.16372   8.11210  10.59424 252.71619 

=================================
Strategy Comparison
=================================

Replicate correlation analysis:

Full correlation matrix (sum strategy):
        ctrl_M1 ctrl_M2 ctrl_M3 mut_M1 mut_M2 mut_M3
ctrl_M1   1.000   0.979   0.981  0.946  0.910  0.957
ctrl_M2   0.979   1.000   0.982  0.951  0.915  0.963
ctrl_M3   0.981   0.982   1.000  0.954  0.917  0.964
mut_M1    0.946   0.951   0.954  1.000  0.921  0.969
mut_M2    0.910   0.915   0.917  0.921  1.000  0.927
mut_M3    0.957   0.963   0.964  0.969  0.927  1.000

Within-condition correlations:
  Control replicates:
    ctrl_M1 vs ctrl_M2: 0.979
    ctrl_M1 vs ctrl_M3: 0.981
    ctrl_M2 vs ctrl_M3: 0.982
  Mean within-ctrl correlation: 0.981

  Mutant replicates:
    mut_M1 vs mut_M2: 0.921
    mut_M1 vs mut_M3: 0.969
    mut_M2 vs mut_M3: 0.927
  Mean within-mut correlation: 0.939

Between-condition correlations:
  Mean ctrl vs mut correlation: 0.942
  Range: 0.910 - 0.964

Quality Assessment:
  ✓ Good within-condition reproducibility (>0.90)
  ⚠ WARNING: Within-condition correlations not much higher than between
    This may indicate weak biological differences

Correlation between sum and weighted strategies: 0.995

=================================
Biological Validation
=================================

Loops with |log2FC| > 2: 1 (0.0%)

Count distribution by replicate:

  ctrl_M1:
    Non-zero: 17983 / 17983 (100.0%)
    Range: 0.1 - 765.9
    Median: 140.3, Mean: 159.3

  ctrl_M2:
    Non-zero: 17983 / 17983 (100.0%)
    Range: 0.1 - 1794.8
    Median: 189.3, Mean: 212.5

  ctrl_M3:
    Non-zero: 17983 / 17983 (100.0%)
    Range: 0.2 - 896.9
    Median: 183.7, Mean: 206.9

  mut_M1:
    Non-zero: 17983 / 17983 (100.0%)
    Range: 0.2 - 2700.6
    Median: 171.5, Mean: 195.1

  mut_M2:
    Non-zero: 17983 / 17983 (100.0%)
    Range: 0.1 - 5777.3
    Median: 170.6, Mean: 191.3

  mut_M3:
    Non-zero: 17983 / 17983 (100.0%)
    Range: 0.1 - 1617.9
    Median: 149.9, Mean: 168.4


Signal strength by group:
  Control (all replicates): median = 169.7, mean = 192.9
  Mutant (all replicates):  median = 163.7, mean = 184.9

Mean difference (mut - ctrl): -7.9
  ✓ No major systematic bias

=================================
Saving Results
=================================

  Count matrix saved: outputs/res_5kb/06_counts_matrix.tsv
  RDS object saved: outputs/res_5kb/06_counts_matrix.rds
  All strategies saved: outputs/res_5kb/06_all_strategies.rds

=== Preparing edgeR Input ===
  edgeR DGEList saved: outputs/res_5kb/06_edgeR_input.rds

EdgeR object preview:
  Samples: ctrl_M1, ctrl_M2, ctrl_M3, mut_M1, mut_M2, mut_M3
  Groups: ctrl, mut
  Replicates per group: n = 3
  Library sizes:
    ctrl_M1: 2,864,059
    ctrl_M2: 3,820,723
    ctrl_M3: 3,720,899
    mut_M1: 3,508,585
    mut_M2: 3,439,868
    mut_M3: 3,029,051

Filtering preview:
  Loops passing filterByExpr: 17981 / 17983 (100.0%)
  Filtered library sizes would be:
    ctrl_M1: 2,864,057
    ctrl_M2: 3,820,714
    ctrl_M3: 3,720,896
    mut_M1: 3,508,579
    mut_M2: 3,439,861
    mut_M3: 3,029,045

Example loop coordinates:
  loop_id chr1    start1      end1 chr2    start2      end2 distance
1  loop_1 chr8 110885001 110890000 chr8 110930001 110935000    45000
2  loop_2 chr8 110165001 110170000 chr8 110475001 110480000   310000
3  loop_3 chr8 126025001 126030000 chr8 126060001 126065000    35000

=================================
Step 6: Aggregation Complete
=================================

Pipeline Summary:
  Resolution: 5000 bp (5 kb)
  Input: 17983 loops with 5x5 pixel buffers
  Output: 17983 x 6 count matrix
  Primary method: Sum aggregation
  Within-ctrl correlation: 0.981
  Within-mut correlation: 0.939
  Between-group correlation: 0.942
  Loops for analysis: 17981 (after filtering)

Output files:
  1. outputs/res_5kb/06_counts_matrix.tsv - Tab-separated counts
  2. outputs/res_5kb/06_counts_matrix.rds - R object
  3. outputs/res_5kb/06_edgeR_input.rds - Ready for differential analysis
  4. outputs/res_5kb/06_all_strategies.rds - All aggregation methods

==================================================
NEXT STEPS:
1. Review replicate correlations and quality metrics
2. Proceed with edgeR differential analysis using biological replicates
3. Expected: Much higher statistical power than n=1 analysis

To start edgeR analysis:
  Rscript scripts/edgeR.R 5000
  # Uses quasi-likelihood GLM with n=3 replicates per group

✅ Matrix aggregation completed for 5kb

=========================================
STEP 4: edgeR differential analysis
=========================================
Script: scripts/edgeR.R
Resolution: 5000 bp
Method: Quasi-likelihood GLM


========================================
edgeR Differential Loop Analysis
RESOLUTION: 5000 bp (5 kb)
========================================

Loading required libraries...
Warning messages:
1: package ‘yaml’ was built under R version 4.4.3 
2: package ‘matrixStats’ was built under R version 4.4.3 
3: package ‘dplyr’ was built under R version 4.4.3 
4: package ‘tibble’ was built under R version 4.4.3 
Loading configuration...
Creating output directories...

Setup complete
   - Config loaded from: config/edgeR_config.yaml
   - Output directory:  outputs/edgeR_results_res_5kb 
   - Random seed:  42 

Loading input data...
   - Loading count matrix... (17983 loops × 6 samples)
   - Loading loop coordinates... (17983 genomic positions)
   - QC summary not found (skipping shift analysis)

Validating data integrity...
   ✓ Data integrity checks passed

Creating genomic annotations...
   ✓ Created annotation for 17983 loops
   - Columns: loop_id, chr1, start1, end1, chr2, start2, end2, coord_string 

Creating DGEList object...
   ✓ DGEList created
   - Total samples: 6 
   - Groups: ctrl, mut 
   - Replicates per group: n = 3 

   Per-sample library sizes:

❌ Differential analysis failed for 5kb with exit code 0
Stopping pipeline at resolution 5kb
